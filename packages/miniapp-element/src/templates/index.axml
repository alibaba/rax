<!-- Container -->
<cover-image
    a:if="{{builtinComponentName === 'cover-image'}}"
    id="{{id}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    animation="{{animation}}"
    src="{{src}}"
    onTap="onTap"
    onLoad="onCoverImageLoad"
    onError="onCoverImageError"
></cover-image>
<cover-view
    a:elif="{{builtinComponentName === 'cover-view'}}"
    id="{{id}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    animation="{{animation}}"
    scroll-top="{{scrollTop}}"
    onTap="onTap"
><template is="subtree-cover" data="{{childNodes: innerChildNodes}}"/>
</cover-view>
<movable-area
    a:elif="{{builtinComponentName === 'movable-area'}}"
    id="{{id}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    animation="{{animation}}"
    scale-area="{{scaleArea}}"
    onTap="onTap"
><block a:for="{{innerChildNodes}}" a:key="nodeId">
    <movable-view
        a:if="{{item.type === 'element' && item.compName === 'movable-view'}}"
        data-private-node-id="{{item.nodeId}}"
        data-private-page-id="{{item.pageId}}"
        id="{{item.id}}"
        class="{{item.class || ''}}"
        style="{{item.style || ''}}"
        onTouchStart="onTouchStart"
        onTouchMove="onTouchMove"
        onTouchEnd="onTouchEnd"
        onTouchCancel="onTouchCancel"
        onTap="onTap"
        hidden="{{item.extra.hidden}}"
        direction="{{item.extra.direction}}"
        inertia="{{item.extra.inertia}}"
        out-of-bounds="{{item.extra.outOfBounds}}"
        x="{{item.extra.x}}"
        y="{{item.extra.y}}"
        damping="{{item.extra.damping}}"
        friction="{{item.extra.friction}}"
        disabled="{{item.extra.disabled}}"
        scale="{{item.extra.scale}}"
        scale-min="{{item.extra.scaleMin}}"
        scale-max="{{item.extra.scaleMax}}"
        scale-value="{{item.extra.scaleValue}}"
        animation="{{item.extra.animation}}"
        onChange="onMovableViewChange"
        onScale="onMovableViewScale"
        onTap="onTap"
    ><template is="subtree" data="{{childNodes: item.childNodes, inCover}}"/></movable-view>
</block></movable-area>
<scroll-view
    a:elif="{{builtinComponentName === 'scroll-view'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    scroll-x="{{scrollX}}"
    scroll-y="{{scrollY}}"
    upper-threshold="{{upperThreshold}}"
    lower-threshold="{{lowerThreshold}}"
    scroll-top="{{scrollTop}}"
    scroll-left="{{scrollLeft}}"
    scroll-into-view="{{scrollIntoView}}"
    scroll-with-animation="{{scrollWithAnimation}}"
    enable-back-to-top="{{enableBackToTop}}"
    enable-flex="{{enableFlex}}"
    scroll-animation-duration="{{scrollAnimationDuration}}"
    onScrollToUpper="onScrollToUpper"
    onScrollToLower="onScrollToLower"
    onScroll="onScroll"
    onTap="onTap"
><template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/></scroll-view>
<swiper
    a:elif="{{builtinComponentName === 'swiper'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    indicator-dots="{{indicatorDots}}"
    indicator-color="{{indicatorColor}}"
    indicator-active-color="{{indicatorActiveColor}}"
    autoplay="{{autoplay}}"
    current="{{current}}"
    interval="{{interval}}"
    duration="{{duration}}"
    circular="{{circular}}"
    vertical="{{vertical}}"
    previous-margin="{{previousMargin}}"
    next-margin="{{nextMargin}}"
    display-multiple-items="{{displayMultipleItems}}"
    skip-hidden-item-layout="{{skipHiddenItemLayout}}"
    easing-function="{{easingFunction}}"
    onChange="onSwiperChange"
    onTransition="onSwiperTransition"
    onAnimationFinish="onSwiperAnimationfinish"
    onTap="onTap"
><block a:for="{{innerChildNodes}}" a:key="nodeId">
    <!-- swiper-item 无法设置 style，不然会覆盖内置组件自己的滚动样式 -->
    <swiper-item
        a:if="{{item.type === 'element' && item.compName === 'swiper-item'}}"
        data-private-node-id="{{item.nodeId}}"
        data-private-page-id="{{item.pageId}}"
        id="{{item.id}}"
        class="{{item.class || ''}}"
        onTouchStart="onTouchStart"
        onTouchMove="onTouchMove"
        onTouchEnd="onTouchEnd"
        onTouchCancel="onTouchCancel"
        onTap="onTap"
        hidden="{{item.extra.hidden}}"
        item-id="{{item.extra.itemId}}"
    ><template is="subtree" data="{{childNodes: item.childNodes, inCover}}"/></swiper-item>
</block></swiper>
<view
    a:elif="{{builtinComponentName === 'view'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    hover-class="{{hoverClass}}"
    hover-stop-propagation="{{hoverStopPropagation}}"
    hover-start-time="{{hoverStayTime}}"
    hover-stay-time="{{hoverStayTime}}"
    onTap="onTap"
><template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/></view>
<!-- Base content -->
<icon
    a:elif="{{builtinComponentName === 'icon'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    type="{{type}}"
    size="{{size}}"
    color="{{color}}"
    onTap="onTap"
></icon>
<progress
    a:elif="{{builtinComponentName === 'progress'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    percent="{{percent}}"
    show-info="{{showInfo}}"
    border-radius="{{borderRadius}}"
    font-size="{{fontSize}}"
    stroke-width="{{strokeWidth}}"
    color="{{color}}"
    active-color="{{activeColor}}"
    background-color="{{backgroundColor}}"
    active="{{active}}"
    active-mode="{{activeMode}}"
    onActiveEnd="onProgressActiveEnd"
    onTap="onTap"
></progress>
<text
    a:elif="{{builtinComponentName === 'text'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    selectable="{{selectable}}"
    space="{{space}}"
    decode="{{decode}}"
    onTap="onTap"
><template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/></text>
<rich-text
  a:elif="{{builtinComponentName === 'rich-text'}}"
  id="{{id}}"
  animation="{{animation}}"
  class="{{class}}"
  style="{{style}}"
  nodes="{{nodes}}"
  onTap="onTap"
></rich-text>
<!-- Form component -->
<button
    a:elif="{{builtinComponentName === 'button'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    size="{{size}}"
    type="{{type}}"
    plain="{{plain}}"
    disabled="{{disabled}}"
    loading="{{loading}}"
    form-type="{{formType}}"
    open-type="{{openType}}"
    hover-class="{{hoverClass}}"
    hover-stop-propagation="{{hoverStopPropagation}}"
    hover-start-time="{{hoverStartTime}}"
    hover-stay-time="{{hoverStayTime}}"
    lang="{{lang}}"
    session-from="{{sessionFrom}}"
    send-message-title="{{sendMessageTitle}}"
    send-message-path="{{sendMessagePath}}"
    send-message-img="{{sendMessageImg}}"
    app-parameter="{{appParameter}}"
    show-message-card="{{showMessageCard}}"
    business-id="{{businessId}}"
    onGetUserInfo="onButtonGetUserInfo"
    onContact="onButtonContact"
    onGetPhoneNumber="onButtonGetPhoneNumber"
    onError="onButtonError"
    onOpenSetting="onButtonOpenSetting"
    onLaunchApp="onButtonLaunchApp"
    onTap="onTap"
><template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/></button>
<label
  a:elif="{{builtinComponentName === 'label'}}"
  id="{{id}}"
  animation="{{animation}}"
  class="{{class}}"
  style="{{style}}"
  hidden="{{hidden}}"
  for="{{for}}"
  onTap="onTap"
>
  <template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/>
</label>
<form
    a:elif="{{builtinComponentName === 'form'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    report-submit="{{reportSubmit}}"
    report-submit-timeout="{{reportSubmitTimeout}}"
    onSubmit="onFormSubmit"
    onReset="onFormReset"
    onTap="onTap"
><template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/></form>
<block a:elif="{{builtinComponentName === 'input'}}">
  <radio-group a:if="{{type === 'radio'}}" onChange="onRadioChange">
    <radio
      id="{{id}}"
      class="{{class}}"
      animation="{{animation}}"
      style="{{style}}"
      hidden="{{hidden}}"
      value="{{value}}"
      disabled="{{disabled}}"
      checked="{{checked}}"
      color="{{color}}"
      onTap="onTap"
    ><template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/></radio></radio-group>
    <checkbox-group a:elif="{{type === 'checkbox'}}" onChange="onCheckboxChange"><checkbox
        id="{{id}}"
        class="{{class}}"
        style="{{style}}"
        hidden="{{hidden}}"
        value="{{value}}"
        disabled="{{disabled}}"
        checked="{{checked}}"
        color="{{color}}"
        onTap="onTap"
    ><template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/></checkbox></checkbox-group>
    <input
        a:elif="{{type !== 'hidden'}}"
        id="{{id}}"
        class="{{class}}"
        style="{{style}}"
        hidden="{{hidden}}"
        value="{{value}}"
        type="{{type}}"
        password="{{password}}"
        placeholder="{{placeholder}}"
        placeholder-style="color:{{placeholderColor}}"
        placeholder-class="{{placeholderClass}}"
        disabled="{{disabled}}"
        maxlength="{{maxlength}}"
        cursor-spacing="{{cursorSpacing}}"
        auto-focus="{{autoFocus}}"
        focus="{{focus}}"
        confirm-type="{{confirmType}}"
        confirm-hold="{{confirmHold}}"
        cursor="{{cursor}}"
        selection-start="{{selectionStart}}"
        selection-end="{{selectionEnd}}"
        adjust-position="{{adjustPosition}}"
        onInput="onInputInput"
        onFocus="onInputFocus"
        onBlur="onInputBlur"
        onConfirm="onInputConfirm"
        onKeyboardHeightChange="onInputKeyBoardHeightChange"
    ></input>
</block>
<radio-group
  a:elif="{{builtinComponentName === 'radio-group'}}"
  id="{{id}}"
  animation="{{animation}}"
  class="{{class}}"
  style="{{style}}"
  name="{{name}}"
  onChange="onRadioChange"
>
  <template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/>
</radio-group>
<radio
  a:elif="{{builtinComponentName === 'radio'}}"
  id="{{id}}"
  class="{{class}}"
  animation="{{animation}}"
  style="{{style}}"
  hidden="{{hidden}}"
  value="{{value}}"
  disabled="{{disabled}}"
  checked="{{checked}}"
  color="{{color}}"
  onTap="onTap"
>
  <template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/>
</radio>
<checkbox-group
  a:elif="{{builtinComponentName === 'checkbox-group'}}"
  onChange="onCheckboxChange"
>
  <template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/>
</checkbox-group>
<checkbox
  a:elif="{{builtinComponentName === 'checkbox'}}"
  id="{{id}}"
  class="{{class}}"
  style="{{style}}"
  hidden="{{hidden}}"
  value="{{value}}"
  disabled="{{disabled}}"
  checked="{{checked}}"
  color="{{color}}"
  onChange="onCheckboxItemChange"
  onTap="onTap"
>
  <template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/>
</checkbox>
<picker
    a:elif="{{builtinComponentName === 'picker'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    disabled="{{disabled}}"
    range="{{range}}"
    range-key="{{rangeKey}}"
    value="{{value}}"
    onChange="onPickerChange"
    onCancel="onPickerCancel"
>
  <view>
    <template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/>
  </view>
</picker>
<picker-view
    a:elif="{{builtinComponentName === 'picker-view'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    value="{{value}}"
    indicator-style="{{indicatorStyle}}"
    indicator-class="{{indicatorClass}}"
    mask-style="{{maskStyle}}"
    mask-class="{{maskClass}}"
    onChange="onPickerViewChange"
    onPickStart="onPickerViewPickstart"
    onPickEnd="onPickerViewPickend"
><block a:for="{{innerChildNodes}}" a:key="nodeId">
    <picker-view-column
      a:if="{{item.type === 'element' && item.compName === 'picker-view-column'}}"
      data-private-node-id="{{item.nodeId}}"
      data-private-page-id="{{item.pageId}}"
      id="{{item.id}}"
      animation="{{animation}}"
      class="{{item.class || ''}}"
      style="{{item.style || ''}}"
      onTouchStart="onTouchStart"
      onTouchMove="onTouchMove"
      onTouchEnd="onTouchEnd"
      onTouchCancel="onTouchCancel"
      onTap="onTap"
      hidden="{{item.extra.hidden}}"
    >
      <view a:for="{{item.childNodes}}" a:for-item="pickerViewColumnItem">
        <element in-cover="{{inCover}}" data-private-node-id="{{pickerViewColumnItem.nodeId}}" data-private-page-id="{{pickerViewColumnItem.pageId}}" id="{{pickerViewColumnItem.id}}" class="{{pickerViewColumnItem.class || ''}}" style="{{pickerViewColumnItem.style || ''}}" animation="{{pickerViewColumnItem.animation}}" onTouchStart="onTouchStart" onTouchmove="onTouchMove" onTouchend="onTouchEnd" onTouchcancel="onTouchCancel" onTap="onTap"></element>
      </view>
    </picker-view-column>
</block></picker-view>
<slider
    a:elif="{{builtinComponentName === 'slider'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    min="{{min}}"
    max="{{max}}"
    step="{{step}}"
    disabled="{{disabled}}"
    value="{{value}}"
    color="{{color}}"
    selected-color="{{selectedColor}}"
    active-color="{{activeColor}}"
    background-color="{{backgroundColor}}"
    block-size="{{blockSize}}"
    block-color="{{blockColor}}"
    show-value="{{showValue}}"
    onChange="onSliderChange"
    onChanging="onSliderChanging"
    onTap="onTap"
></slider>
<switch
    a:elif="{{builtinComponentName === 'switch'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    checked="{{checked}}"
    disabled="{{disabled}}"
    type="{{type}}"
    color="{{color}}"
    onChange="onSwitchChange"
    onTap="onTap"
></switch>
<textarea
    a:elif="{{builtinComponentName === 'textarea'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    value="{{value}}"
    placeholder="{{placeholder}}"
    placeholder-style="color:{{placeholderColor}}"
    placeholder-class="{{placeholderClass}}"
    disabled="{{disabled}}"
    maxlength="{{maxlength}}"
    auto-focus="{{autoFocus}}"
    focus="{{focus}}"
    auto-height="{{autoHeight}}"
    fixed="{{fixed}}"
    cursor-spacing="{{cursorSpacing}}"
    cursor="{{cursor}}"
    show-confirm-bar="{{showConfirmBar}}"
    selection-start="{{selectionStart}}"
    selection-end="{{selectionEnd}}"
    adjust-position="{{adjustPosition}}"
    onFocus="onTextareaFocus"
    onBlur="onTextareaBlur"
    onLineChange="onTextareaLineChange"
    onInput="onTextareaInput"
    onConfirm="onTextareaConfirm"
    onKeyboardHeightChange="onTextareaKeyBoardHeightChange"
></textarea>
<!-- Navigator -->
<navigator
    a:elif="{{builtinComponentName === 'navigator'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    target="{{target}}"
    url="{{url}}"
    open-type="{{openType}}"
    delta="{{delta}}"
    app-id="{{appId}}"
    path="{{path}}"
    extra-data="{{extraData}}"
    version="{{version}}"
    hover-class="{{hoverClass}}"
    hover-stop-propagation="{{hoverStopPropagation}}"
    hover-start-time="{{hoverStartTime}}"
    hover-stay-time="{{hoverStayTime}}"
    onSuccess="onNavigatorSuccess"
    onFail="onNavigatorFail"
    onComplete="onNavigatorComplete"
    onTap="onTap"
><template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/></navigator>
<!-- Media -->
<image
    a:elif="{{builtinComponentName === 'image'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    rendering-mode="{{renderingMode}}"
    src="{{src}}"
    mode="{{mode}}"
    lazy-load="{{lazyLoad}}"
    show-menu-by-longpress="{{showMenuByLongpress}}"
    onLoad="onImageLoad"
    onError="onImageError"
    onTap="onTap"
></image>
<video
    a:elif="{{builtinComponentName === 'video'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    src="{{src}}"
    duration="{{duration}}"
    controls="{{controls}}"
    danmu-list="{{danmuList}}"
    danmu-btn="{{danmuBtn}}"
    enable-danmu="{{enableDanmu}}"
    autoplay="{{autoplay}}"
    loop="{{loop}}"
    muted="{{muted}}"
    initial-time="{{initialTime}}"
    direction="{{direction}}"
    show-progress="{{showProgress}}"
    show-fullscreen-btn="{{showFullscreenBtn}}"
    show-play-btn="{{showPlayBtn}}"
    show-center-play-btn="{{showCenterPlayBtn}}"
    enable-progress-gesture="{{enableProgressGesture}}"
    object-fit="{{objectFit}}"
    poster="{{poster}}"
    show-mute-btn="{{showMuteBtn}}"
    title="{{title}}"
    play-btn-position="{{playBtnPosition}}"
    enable-play-gesture="{{enablePlayGesture}}"
    auto-pause-if-navigate="{{autoPauseIfNavigate}}"
    auto-pause-if-open-native="{{autoPauseIfOpenNative}}"
    vslide-gesture="{{vslideGesture}}"
    vslide-gesture-in-fullscreen="{{vslideGestureInFullscreen}}"
    onPlay="onVideoPlay"
    onPause="onVideoPause"
    onEnded="onVideoEnded"
    onTimeUpdate="onVideoTimeUpdate"
    onFullScreenChange="onVideoFullScreenChange"
    onWaiting="onVideoWaiting"
    onError="onVideoError"
    onProgress="onVideoProgress"
    onTap="onTap"
><template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/></video>
<!-- Map -->
<map
    a:elif="{{builtinComponentName === 'map'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    longitude="{{longitude}}"
    latitude="{{latitude}}"
    scale="{{scale}}"
    markers="{{markers}}"
    polyline="{{polyline}}"
    circles="{{circles}}"
    controls="{{controls}}"
    include-points="{{includePoints}}"
    show-location="{{showLocation}}"
    polygons="{{polygons}}"
    subkey="{{subkey}}"
    layer-style="{{layerStyle}}"
    rotate="{{rotate}}"
    skew="{{skew}}"
    enable-3D="{{enable3D}}"
    show-compass="{{showCompass}}"
    enable-overlooking="{{enableOverlooking}}"
    enable-zoom="{{enableZoom}}"
    enable-scroll="{{enableScroll}}"
    enable-rotate="{{enableRotate}}"
    enable-satellite="{{enableSatellite}}"
    enable-traffic="{{enableTraffic}}"
    onTap="onMapTap"
    onMarkerTap="onMapMarkerTap"
    onControlTap="onMapControlTap"
    onCalloutTap="onMapCalloutTap"
    onUpdated="onMapUpdated"
    onRegionChange="onMapRegionChange"
    onTap="onTap"
><template is="subtree-cover" data="{{childNodes: innerChildNodes}}"/></map>
<!-- Canvas -->
<canvas
    a:elif="{{builtinComponentName === 'canvas'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    type="{{type}}"
    canvas-id="{{canvasId}}"
    disable-scroll="{{disableScroll}}"
    onTouchStart="onCanvasTouchStart"
    onTouchMove="onCanvasTouchMove"
    onTouchEnd="onCanvasTouchEnd"
    onTouchCancel="onCanvasTouchCancel"
    onLongTap="onCanvasLongTap"
    onError="onCanvasError"
    onTap="onTap"
><template is="subtree-cover" data="{{childNodes: innerChildNodes}}"/></canvas>
<!-- Open data -->
<web-view
    a:elif="{{builtinComponentName === 'web-view'}}"
    id="{{id}}"
    animation="{{animation}}"
    class="{{class}}"
    style="{{style}}"
    hidden="{{hidden}}"
    src="{{src}}"
    onMessage="onWebviewMessage"
    onLoad="onWebviewLoad"
    onError="onWebviewError"
></web-view>
<!-- Others -->
<block
    a:elif="{{builtinComponentName === 'not-support'}}"
>{{content}}</block>
<!-- Custom component -->
<custom-component
    a:elif="{{!!customComponentName}}"
    animation="{{animation}}"
    name="{{customComponentName}}"
    data-private-node-id="{{nodeId}}"
    data-private-page-id="{{pageId}}"
><template is="subtree" data="{{childNodes: innerChildNodes, inCover}}"/></custom-component>
<!-- Child Node -->
<template a:else is="subtree" data="{{childNodes, inCover}}"/>
